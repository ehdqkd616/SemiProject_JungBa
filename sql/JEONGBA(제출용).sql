--------------------------------------------------
--------------     테이블 초기화 	------------------	
--------------------------------------------------

DROP TABLE MEMBER;

DROP TABLE REPLY;
DROP TABLE BOARD;
DROP TABLE GRADE;
DROP TABLE FILES;

DROP SEQUENCE SEQ_MNO;
DROP SEQUENCE SEQ_BNO;
DROP SEQUENCE SEQ_RNO;
DROP SEQUENCE SEQ_FNO;

ALTER TABLE BOARD DROP CONSTRAINT FK_MEMBER1;
ALTER TABLE REPLY DROP CONSTRAINT FK_MEMBER2;
ALTER TABLE REPLY DROP CONSTRAINT FK_BOARD;
ALTER TABLE FILES DROP CONSTRAINT FK_BOARD2;
ALTER TABLE FILES DROP CONSTRAINT FK_MEMBER3;

--------------------------------------------------
--------------     MEMBER 관련	------------------	
--------------------------------------------------

-- CREATE MEMBER TABLE
CREATE TABLE MEMBER (
	MEMBER_NO	    NUMBER      	PRIMARY KEY,
	MEMBER_ID	    VARCHAR2(50)	UNIQUE,
	MEMBER_PW	    VARCHAR2(100)	NOT NULL,
	MEMBER_NAME	    VARCHAR2(30)	NOT NULL,
    MEMBER_NICKNAME VARCHAR2(30)    UNIQUE,
	MEMBER_GENDER	CHAR(2)	        NOT NULL,
	MEMBER_BIRTHDAY	DATE	        NOT NULL,
	MEMBER_PHONE	VARCHAR2(20)	NOT NULL,
	MEMBER_EMAIL	VARCHAR2(100)	NOT NULL,
	MEMBER_ADDRESS	VARCHAR2(100)	NOT NULL,
    MEMBER_REGDATE	DATE	        DEFAULT SYSDATE NOT NULL,
	MEMBER_ENABLE	CHAR(2)	        DEFAULT 'Y' NOT NULL,
	MEMBER_GRADE	VARCHAR2(10)	DEFAULT 'user' NOT NULL
);

CREATE SEQUENCE SEQ_MNO;    -- MEMBER SEQUENCE

COMMIT;


--------------------------------------------------
--------------     BOARD 관련	------------------	
--------------------------------------------------

-- CREATE BOARD TABLE
CREATE TABLE BOARD (
	B_NO	            NUMBER	        PRIMARY KEY,
	B_NAME              VARCHAR2(100)	NOT NULL,
	B_TITLE	            VARCHAR2(100)	NOT NULL,
	B_CONTENT	        VARCHAR2(4000)	NOT NULL,
	B_DATE	            DATE	        DEFAULT SYSDATE NOT NULL,
    B_RDATE	            DATE	        DEFAULT SYSDATE NOT NULL,
	B_VIEW_COUNT	    NUMBER	        DEFAULT 0 NOT NULL,
	B_RECOMMEND	        NUMBER	        DEFAULT 0 NOT NULL,
	B_ENABLE	        VARCHAR2(1)     DEFAULT 'Y' NOT NULL,
	B_WRITER	        NUMBER          NOT NULL,
	B_REPLY_COUNT	    NUMBER	        DEFAULT 0 NOT NULL,
	AC_STATE	        VARCHAR2(50)	NULL,
	LC_NAME	            VARCHAR2(300)	NULL,   --
	ENROLL_STATE	    VARCHAR2(1)	    DEFAULT 'N' NOT NULL,
	EM_STATE	        VARCHAR2(50)	NULL,
	TC_NAME	            VARCHAR2(300)	NULL,   --
	CG_NAME	            VARCHAR2(50)	NULL,
    RECRUIT_STARTDATE   DATE            NULL,
    RECRUIT_ENDDATE     DATE            NULL,
    ACTIVITY_STARTDATE  DATE            NULL,
    ACTIVITY_ENDDATE    DATE            NULL
);

CREATE SEQUENCE SEQ_BNO;    -- BOARD SEQUENCE

COMMIT;


--------------------------------------------------
--------------     REPLY 관련	------------------	
--------------------------------------------------

-- CREATE REPLY TABLE
CREATE TABLE REPLY (
	REPLY_NO	    NUMBER	        PRIMARY KEY,
    REPLY_CONTENT   VARCHAR2(500)   NOT NULL, 
	REPLY_DATE	    DATE	        DEFAULT SYSDATE NOT NULL,
    REPLY_RDATE     DATE            DEFAULT SYSDATE NOT NULL,    --
	R_WRITER	    NUMBER      	NOT NULL,
    REPLY_ENABLE    VARCHAR2(1)     DEFAULT 'Y' NOT NULL,        --
	B_NO	        NUMBER	        NOT NULL
);

CREATE SEQUENCE SEQ_RNO;    -- REPLY SEQUENCE

COMMIT;


--------------------------------------------------
--------------     FILES 관련	------------------	
--------------------------------------------------

-- CREATE FILES TABLE
CREATE TABLE FILES (
    FILE_NO           NUMBER            PRIMARY KEY,
    ORIGIN_NAME       VARCHAR2(255)     NOT NULL,
    CHANGE_NAME       VARCHAR2(255)     NOT NULL,
    FILE_PATH         VARCHAR2(1000)    NOT NULL,
    UPLOAD_DATE       DATE              DEFAULT SYSDATE  NOT NULL,
    FILE_LEVEL        NUMBER            NOT NULL,
    DOWNLOAD_COUNT    NUMBER            DEFAULT 0,
    STATUS            VARCHAR2(1)       DEFAULT 'Y',
    B_NO              NUMBER,
    MEMBER_NO         NUMBER
    --FOREIGN KEY (B_NO) REFERENCES BOARD 
    --FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER
);

CREATE SEQUENCE SEQ_FNO;    -- FILE SEQUENCE

COMMIT;


--------------------------------------------------
--------------     제약 조건 관련	------------------	
--------------------------------------------------

-- BOARD TABLE WRITER FOREIGN KEY 제약조건 
ALTER TABLE BOARD ADD CONSTRAINT FK_MEMBER1 FOREIGN KEY (B_WRITER) 
REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE;

-- REPLY TABLE WRITER FOREIGN KEY 제약조건 
ALTER TABLE REPLY ADD CONSTRAINT FK_MEMBER2 FOREIGN KEY (R_WRITER) 
REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE;

-- REPLY TABLE BOARD_NO FOREIGN KEY 제약조건1 
ALTER TABLE REPLY ADD CONSTRAINT FK_BOARD FOREIGN KEY (B_NO) 
REFERENCES BOARD(B_NO) ON DELETE CASCADE;

-- FILES TABLE BOARD_NO FOREIGN KEY 제약조건2 
ALTER TABLE FILES ADD CONSTRAINT FK_BOARD2 FOREIGN KEY (B_NO) 
REFERENCES BOARD(B_NO) ON DELETE CASCADE;

-- FILES TABLE MEMBER_NO FOREIGN KEY 제약조건
ALTER TABLE FILES ADD CONSTRAINT FK_MEMBER3 FOREIGN KEY (MEMBER_NO) 
REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE;

COMMIT;


--------------------------------------------------
----------------   VIEW 관련	   -------------------	
--------------------------------------------------

--멤버 리스트
CREATE OR REPLACE VIEW MEMBERLIST
AS                      
SELECT ROWNUM RNUM,MEMBER.*
FROM ( SELECT MEMBER_NO,MEMBER_ID,MEMBER_NAME,MEMBER_NICKNAME,MEMBER_GENDER,MEMBER_BIRTHDAY,MEMBER_PHONE,MEMBER_EMAIL,MEMBER_ADDRESS,MEMBER_REGDATE,MEMBER_ENABLE,MEMBER_GRADE, 
(SELECT COUNT(*) 
    FROM BOARD B
    WHERE M.MEMBER_NO=B.B_WRITER) MEMBER_BOARD
FROM MEMBER M
WHERE MEMBER_GRADE='user'
ORDER BY MEMBER_NO DESC) MEMBER;

COMMIT;


-- 질문 게시판 리스트
CREATE OR REPLACE VIEW QALIST
AS
SELECT ROWNUM RNUM,QUESTION.*
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,CG_NAME
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='QA'
    ORDER BY B_NO DESC) QUESTION;

COMMIT;


-- 질문 게시판 DETAIL
CREATE OR REPLACE VIEW QADETAIL
AS
SELECT *
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,CG_NAME
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='QA'
    ORDER BY B_NO DESC);

COMMIT;


--공지사항 게시판 리스트
CREATE OR REPLACE VIEW NOTICELIST
AS
SELECT ROWNUM RNUM,NOTICE.*
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,CG_NAME
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='공지사항'
    ORDER BY B_NO DESC) NOTICE;

COMMIT;


--공지사항 게시판 디테일
CREATE OR REPLACE VIEW NOTICEDETAIL
AS
SELECT *
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,CG_NAME
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='공지사항'
    ORDER BY B_NO DESC);

COMMIT;


--자유 게시판 리스트
CREATE OR REPLACE VIEW FREELIST
AS
SELECT ROWNUM RNUM, F.*
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='자유'
    ORDER BY B_NO DESC) F;	

COMMIT;


--자유 게시판 디테일
CREATE OR REPLACE VIEW FREEDETAIL
AS
SELECT *
FROM (SELECT B_NO,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='자유'
    ORDER BY B_NO DESC);	

COMMIT;


-- 지원정책 전체 리스트
CREATE OR REPLACE VIEW SUPPORTLIST
AS
SELECT ROWNUM RNUM,SUPPORT.*
FROM (SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME,RECRUIT_STARTDATE,RECRUIT_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='지원'
    ORDER BY B_NO DESC) SUPPORT;

COMMIT;


-- 대외활동 전체 리스트
CREATE OR REPLACE VIEW EXTERNALLIST
AS
SELECT ROWNUM RNUM,EXTERNALLIST.*
FROM (SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME,RECRUIT_STARTDATE,RECRUIT_ENDDATE,ACTIVITY_STARTDATE,ACTIVITY_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='대외'
    ORDER BY B_NO DESC) EXTERNALLIST;

COMMIT;


-- 지원정책 메인 리스트
CREATE OR REPLACE VIEW MAINSUPPORTLIST
AS
SELECT ROWNUM RNUM,SUPPORT.*
FROM (SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME,RECRUIT_STARTDATE,RECRUIT_ENDDATE,ACTIVITY_STARTDATE,ACTIVITY_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='지원' AND ENROLL_STATE='Y' 
    ORDER BY B_NO DESC) SUPPORT;

COMMIT;


-- 대외활동 메인 리스트
CREATE OR REPLACE VIEW MAINEXTERNALLIST
AS
SELECT ROWNUM RNUM,EXTERNALLIST.*
FROM (SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME,RECRUIT_STARTDATE,RECRUIT_ENDDATE,ACTIVITY_STARTDATE,ACTIVITY_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND B_NAME='대외' AND ENROLL_STATE='Y' 
    ORDER BY B_NO DESC) EXTERNALLIST;

COMMIT;


-- 통합게시판 리스트 BLIST
CREATE OR REPLACE VIEW BLIST
AS
SELECT ROWNUM RNUM,B.*
FROM (SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_ENABLE,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME,RECRUIT_STARTDATE,RECRUIT_ENDDATE,ACTIVITY_STARTDATE,ACTIVITY_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' 
    ORDER BY B_NO DESC) B;
    
COMMIT;


--커뮤니티 리트스 전체
CREATE OR REPLACE VIEW COMMULIST
AS
SELECT ROWNUM RNUM,COMMU.*
FROM(SELECT B_NO,B_NAME,B_TITLE,B_CONTENT,B_DATE,B_RDATE,B_VIEW_COUNT,B_RECOMMEND,B_WRITER,MEMBER_NICKNAME,B_REPLY_COUNT,AC_STATE,LC_NAME,ENROLL_STATE,EM_STATE,TC_NAME,CG_NAME, RECRUIT_STARTDATE, RECRUIT_ENDDATE, ACTIVITY_STARTDATE, ACTIVITY_ENDDATE 
    FROM BOARD 
        JOIN MEMBER ON(MEMBER_NO = B_WRITER)
    WHERE BOARD.B_ENABLE='Y' AND ENROLL_STATE='N' AND (B_NAME='지원' OR B_NAME='대외' OR B_NAME='자유')
    ORDER BY B_NO DESC) COMMU;
    
COMMIT;


-- 댓글 리스트(프로필 포함)
CREATE OR REPLACE VIEW REPLYLIST
AS 
SELECT ROWNUM RNUM, REPLY_NO, REPLY_CONTENT, REPLY_DATE, REPLY_RDATE, R_WRITER, MEMBER_NICKNAME, REPLY_ENABLE, B_NO, CHANGE_NAME
FROM (SELECT R.REPLY_NO, R.REPLY_CONTENT, R.REPLY_DATE, R.REPLY_RDATE, R.R_WRITER, M.MEMBER_NICKNAME, R.REPLY_ENABLE, R.B_NO, F.CHANGE_NAME
        FROM REPLY R
            JOIN MEMBER M ON M.MEMBER_NO = R.R_WRITER
            LEFT OUTER JOIN FILES F ON R.R_WRITER = F.MEMBER_NO
        WHERE R.REPLY_ENABLE='Y'
        ORDER BY R.REPLY_NO ASC);

COMMIT;
 
